{"version":3,"sources":["../node_modules/decimal.js/decimal.js","../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/global.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/util.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/assert.js","../../node_modules/buffer-layout/lib/Layout.js","../../client/layout.js","../../client/util/send-and-confirm-transaction.js","../../client/token.js","../node_modules/@solana/spl-token/node_modules/@babel/runtime/helpers/defineProperty.js","../../src/util/to-buffer.js","../../node_modules/base-x/index.js","../../node_modules/safe-buffer/index.js","../../node_modules/bs58/index.js","../../src/publickey.js","../../src/account.js","../../src/bpf-loader-deprecated.js","../../src/layout.js","../../src/util/shortvec-encoding.js","../../src/message.js","../../src/transaction.js","../../src/sysvar.js","../../node_modules/punycode/punycode.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/qs.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/url.js","../../src/fee-calculator.js","../../src/nonce-account.js","../../src/connection.js","../../src/util/send-and-confirm-transaction.js","../../src/instruction.js","../../src/system-program.js","../../src/bpf-loader.js","../../src/stake-program.js","../../src/secp256k1-program.js","../../src/validator-info.js","../../src/vote-account.js","../node_modules/@solana/spl-token/node_modules/@solana/web3.js/node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@solana/spl-token/node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/ramda/es/or.js","../node_modules/ramda/es/internal/_curry3.js","../node_modules/ramda/es/internal/_arrayFromIterator.js","../node_modules/ramda/es/internal/_includesWith.js","../node_modules/ramda/es/internal/_objectIs.js","../node_modules/ramda/es/type.js","../node_modules/ramda/es/internal/_equals.js","../node_modules/ramda/es/internal/_functionName.js","../node_modules/ramda/es/equals.js","../node_modules/ramda/es/pathEq.js","../node_modules/ramda/es/internal/_xany.js","../node_modules/ramda/es/internal/_reduced.js","../node_modules/ramda/es/any.js"],"names":["globalScope","Decimal","inexact","quadrant","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","PI","DEFAULTS","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","mathfloor","Math","floor","mathpow","pow","isBinary","isHex","isOctal","isDecimal","BASE","LN10_PRECISION","length","PI_PRECISION","P","name","digitsToString","d","i","k","ws","indexOfLastWord","str","w","getZeroString","checkInt32","min","max","Error","checkRoundingDigits","rm","repeating","di","r","rd","ceil","convertBase","baseIn","baseOut","j","arrL","arr","strL","indexOf","charAt","reverse","absoluteValue","abs","x","this","constructor","s","finalise","e","comparedTo","cmp","y","xdL","ydL","xd","yd","xs","ys","NaN","cosine","cos","pr","Ctor","sd","len","tinyPow","toString","taylorSeries","times","cos2x","minus","plus","toLessThanHalfPi","neg","cubeRoot","cbrt","m","n","rep","t","t3","t3plusx","isFinite","isZero","toExponential","slice","divide","eq","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","divToInt","equals","greaterThan","gt","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sqrt","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","x2","isInteger","isInt","isNaN","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","log","base","isBase10","denominator","inf","num","arg","naturalLogarithm","getLn10","sub","xe","xLTy","push","pop","shift","getBase10Exponent","mod","q","naturalExponential","exp","negated","add","carry","unshift","z","getPrecision","round","sine","sin","sin2_x","squareRoot","tangent","tan","mul","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFixed","toFraction","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","valueOf","toJSON","multiplyInteger","temp","compare","a","b","aL","bL","subtract","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign","isTruncated","digits","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","args","ltgt","guard","sum","c","c0","numerator","x1","String","parseDecimal","replace","search","substring","charCodeAt","parseOther","divisor","isFloat","p","test","toLowerCase","isHyperbolic","u","pi","atan2","config","obj","v","useDefaults","defaults","ps","getRandomValues","randomBytes","hypot","arguments","isDecimalInstance","log2","log10","random","Uint32Array","copy","clone","prototype","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","set","hasOwnProperty","define","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","Uint8Array","Array","code","start","end","output","join","buffer","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","Infinity","value","rt","LN2","customInspectSymbol","Symbol","exports","Buffer","alloc","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","concat","list","pos","swap16","swap32","swap64","toLocaleString","inspect","INSPECT_MAX_BYTES","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","_arr","ret","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","newBuf","subarray","readUintLE","readUIntLE","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","writable","configurable","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","global","self","window","create","ctor","superCtor","super_","TempCtor","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","isString","primitive","simple","JSON","stringify","isNull","formatPrimitive","keys","visibleKeys","hash","forEach","idx","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","Date","ar","braces","toUTCString","l","formatProperty","key","match","formatArray","map","reduce","prev","cur","reduceToSingleString","desc","getOwnPropertyDescriptor","line","re","isObject","objectToString","isPrimitive","o","origin","prop","_functionsHaveNames","hasOwn","objectKeys","pSlice","functionsHaveNames","pToString","arrbuf","DataView","assert","fail","ok","regex","getName","func","AssertionError","options","expected","operator","generatedMessage","stackStartFunction","captureStackTrace","err","fn_name","next_line","something","utilInspect","rawname","equal","notEqual","deepEqual","_deepEqual","deepStrictEqual","strict","memos","getTime","source","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","actualVisitedObjects","getPrototypeOf","aIsArgs","isArguments","bIsArgs","ka","kb","sort","objEquiv","object","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","expectedException","isPrototypeOf","_throws","shouldThrow","block","_tryBlock","userProvidedMessage","isUnexpectedException","throws","doesNotThrow","ifError","inherits","Layout","span","property","rv","assign","values","ExternalLayout","UInt","Structure","fields","decodePrefixes","acc","fd","getSpan","fsp","dest","makeDestinationObject","decode","firstOffset","lastOffset","lastWrote","fv","encode","Blob","isCount","publicKey","BufferLayout","uint64","sendAndConfirmTransaction","realSendAndConfirmTransaction","connection","transaction","signers","skipPreflight","commitment","preflightCommitment","ASSOCIATED_TOKEN_PROGRAM_ID","FAILED_TO_FIND_ACCOUNT","INVALID_ACCOUNT_OWNER","pubkeyToBuffer","toBuffer","zeroPad","fromBuffer","u64","isAccount","accountOrPublicKey","AuthorityTypeCodes","MintTokens","FreezeAccount","AccountOwner","CloseAccount","NATIVE_MINT","MintLayout","AccountLayout","MultisigLayout","programId","payer","associatedProgramId","createAccount","Token","balanceNeeded","newAccount","fromPubkey","newAccountPubkey","lamports","space","mintPublicKey","createAssociatedTokenAccount","associatedAddress","createAssociatedTokenAccountInternal","owner","getOrCreateAssociatedAccountInfo","getAccountInfo","createMultisig","multisigAccount","pubkey","isSigner","isWritable","signer","dataLayout","instruction","getMintInfo","info","mintInfo","account","accountInfo","getMultisigInfo","multisigInfo","transfer","ownerPublicKey","approve","revoke","setAuthority","currentAuthorityPublicKey","currentAuthority","mintTo","authority","burn","closeAccount","authorityPublicKey","freezeAccount","thawAccount","transferChecked","approveChecked","mintToChecked","burnChecked","getMinBalanceRentForExemptMint","getMinBalanceRentForExemptAccount","getMinBalanceRentForExemptMultisig","createMint","mintAccount","token","createWrappedNativeAccount","toPubkey","amount","createInitMintInstruction","commandDataLayout","encodeLength","decimals","mintAuthority","option","freezeAuthority","createInitAccountInstruction","createTransferInstruction","multiSigners","createApproveInstruction","createRevokeInstruction","createSetAuthorityInstruction","authorityType","newAuthority","createMintToInstruction","createBurnInstruction","createCloseAccountInstruction","createFreezeAccountInstruction","createThawAccountInstruction","createTransferCheckedInstruction","createApproveCheckedInstruction","createMintToCheckedInstruction","createBurnCheckedInstruction","getAssociatedTokenAddress","PublicKey","mint","createAssociatedTokenAccountInstruction","SystemProgram","module","__esModule","copyProps","SafeBuffer","SlowBuffer","ALPHABET","ALPHABET_MAP","LEADER","decodeUnsafe","basex","naclLowLevel","nacl","decoded","bs58","_bn","toBase58","toArrayLike","createWithSeed","fromPublicKey","sha256","createProgramAddress","seeds","seed","is_on_curve","publicKeyBytes","findProgramAddress","nonce","seedsWithNonce","address","chk","den","den2","den4","den6","neq25519","gf1","I","_keypair","secretKey","OffsetLayout","layout","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","NearInt64","Sequence","elementLayout","count","elo","rustString","rsl","_decode","_encode","chars","decodeLength","elem","rem_len","isAccountWritable","index","header","numRequiredSignatures","accountKeys","serialize","numKeys","keyCount","shortvec","instructions","programIdIndex","keyIndicesCount","accounts","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","recentBlockhash","signData","accountCount","Message","DEFAULT_SIGNATURE","PACKET_DATA_SIZE","signature","signatures","items","item","TransactionInstruction","compileMessage","nonceInfo","feePayer","programIds","accountMetas","accountMeta","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","meta","invariant","keyIndex","_compile","every","pair","serializeMessage","setSigners","uniqueSigners","partialSign","_partialSign","addSignature","_addSignature","findIndex","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","Transaction","populate","sigPubkeyPair","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","root","freeExports","nodeType","freeModule","freeGlobal","punycode","maxInt","regexPunycode","regexNonASCII","regexSeparators","stringFromCharCode","result","mapDomain","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","basic","oldi","baseMinusT","inputLength","bias","splice","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","stringifyPrimitive","f","parse","qs","sep","regexp","maxKeys","kstr","vstr","decodeURIComponent","Url","protocol","slashes","auth","host","port","hostname","query","pathname","path","href","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","urlParse","url","parseQueryString","slashesDenoteHost","queryIndex","splitter","uSplit","rest","simplePath","exec","qsParse","hec","lowerProto","atSign","hostEnd","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","toASCII","h","ae","esc","encodeURIComponent","escape","qm","format","ks","resolve","relative","resolveObject","rel","relPath","tkeys","tk","tkey","rkeys","rk","rkey","authInHost","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","hasTrailingSlash","up","isAbsolute","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","PublicKeyFromString","coerce","instance","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","createRpcResult","union","pick","jsonrpc","id","unknown","optional","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","context","slot","number","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetEpochInfoResult","epoch","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","boolean","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","record","TransactionErrorResult","nullable","SignatureStatusResult","logs","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","ParsedAccountDataResult","executable","rentEpoch","program","AccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","ProgramAccountInfoResult","state","active","inactive","memo","blockTime","subscription","SlotInfoResult","parent","VoteAccountInfoResult","gossip","tpu","rpc","version","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","SignatureStatusResponse","current","delinquent","confirmations","confirmationStatus","ConfirmedTransactionResult","TransactionFromConfirmed","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","PerfSampleResult","blockhash","previousBlockhash","parentSlot","transactions","rewards","postBalance","rewardType","feeCalculator","lamportsPerSignature","numTransactions","numSlots","samplePeriodSecs","sendOptions","status","encodeData","allocLength","layoutFields","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","params","createAccountWithSeed","createNonceAccount","basePubkey","initParams","noncePubkey","authorizedPubkey","nonceInitialize","authorized","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","AuthorizeWithSeed","Staker","Withdrawer","ecdsaSign","website","details","keybaseUsername","BN","endian","isBN","negative","words","red","_init","wordSize","require","parseHex","parseBase","move","left","right","_initNumber","_initArray","_parseHex","_parseBase","_strip","toArray","off","limbLen","limbPow","word","imuln","_iaddn","_move","_expand","_normSign","for","zeros","groupSizes","groupBases","padding","groupSize","groupBase","modrn","idivn","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","wbit","iadd","isub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","itwdf","rtwdf_","itwdf_","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","jm","gcd","_invmp","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","outLen","next","mod3","nOne","lpow","inv","wnd","currentLen","mont","_curry2","_curry3","f3","_isPlaceholder","_b","_c","_a","_curry1","_arrayFromIterator","iter","done","_includesWith","pred","is","_uniqContentEquals","aIterator","bIterator","stackA","stackB","_equals","aItem","_objectIs","typeA","_functionName","sticky","unicode","entries","keysA","extendedStackA","extendedStackB","_has","pathEq","_path","XAny","xf","any","_xfBase","init","_xany","_dispatchable"],"mappings":"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","file":"static/js/5.3d38167e.chunk.js","sourcesContent":[";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.2.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { name: '[object Decimal]' };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n  // Add aliases to match BigDecimal method names.\r\n  // P.add = P.plus;\r\n  P.subtract = P.minus;\r\n  P.multiply = P.times;\r\n  P.divide = P.div;\r\n  P.remainder = P.mod;\r\n  P.compareTo = P.cmp;\r\n  P.negate = P.neg;\r\n   */\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, y,\r\n      len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) return taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (v instanceof Decimal) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.name === '[object Decimal]' || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport {isBuffer} from 'buffer';\nimport {isPrimitive, inherits, isError, isFunction, isRegExp, isDate, inspect as utilInspect} from 'util';\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nexport default assert;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nexport function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return utilInspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nexport function fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nexport function ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\nexport {ok as assert};\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nexport function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nexport function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nexport function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nexport function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nexport function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nexport function notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nexport function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nexport function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nexport function throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nexport function doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nexport function ifError(err) {\n  if (err) throw err;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\nconst assert = require('assert');\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  // assert.equal(roundedInt64(hi32, lo32), src);\n  // assert(0 <= lo32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined === fd.property) {\n        /* By construction the field must be fixed-length (because\n         * unnamed variable-length fields are disallowed when\n         * encoding).  But check it anyway. */\n        assert(0 < span);\n      } else {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (vb instanceof Buffer) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!((src instanceof Buffer)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!(b instanceof Buffer)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!(b instanceof Buffer)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n","// @flow\n\nimport {sendAndConfirmTransaction as realSendAndConfirmTransaction} from '@solana/web3.js';\nimport type {\n  Account,\n  Connection,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nexport function sendAndConfirmTransaction(\n  title: string,\n  connection: Connection,\n  transaction: Transaction,\n  ...signers: Array<Account>\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(connection, transaction, signers, {\n    skipPreflight: false,\n    commitment: 'recent',\n    preflightCommitment: 'recent',\n  });\n}\n","/**\n * @flow\n */\n\nimport {Buffer} from 'buffer';\nimport assert from 'assert';\nimport BN from 'bn.js';\nimport * as BufferLayout from 'buffer-layout';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n  SYSVAR_RENT_PUBKEY,\n} from '@solana/web3.js';\nimport type {\n  Connection,\n  Commitment,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nimport * as Layout from './layout';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\n\nexport const TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nconst FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nconst INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\nfunction pubkeyToBuffer(publicKey: PublicKey): typeof Buffer {\n  return Buffer.from(publicKey.toBuffer());\n}\n\n/**\n * 64-bit value\n */\nexport class u64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n      return b;\n    }\n    assert(b.length < 8, 'u64 too large');\n\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a u64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): u64 {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new u64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\nfunction isAccount(accountOrPublicKey: any): boolean {\n  return 'publicKey' in accountOrPublicKey;\n}\n\ntype AuthorityType =\n  | 'MintTokens'\n  | 'FreezeAccount'\n  | 'AccountOwner'\n  | 'CloseAccount';\n\nconst AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3,\n};\n\n// The address of the special mint for wrapped native token.\nexport const NATIVE_MINT: PublicKey = new PublicKey(\n  'So11111111111111111111111111111111111111112',\n);\n\n/**\n * Information about the mint\n */\ntype MintInfo = {|\n  /**\n   * Optional authority used to mint new tokens. The mint authority may only be provided during\n   * mint creation. If no mint authority is present then the mint has a fixed supply and no\n   * further tokens may be minted.\n   */\n  mintAuthority: null | PublicKey,\n\n  /**\n   * Total supply of tokens\n   */\n  supply: u64,\n\n  /**\n   * Number of base 10 digits to the right of the decimal place\n   */\n  decimals: number,\n\n  /**\n   * Is this mint initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Optional authority to freeze token accounts\n   */\n  freezeAuthority: null | PublicKey,\n|};\n\nexport const MintLayout: typeof BufferLayout.Structure = BufferLayout.struct([\n  BufferLayout.u32('mintAuthorityOption'),\n  Layout.publicKey('mintAuthority'),\n  Layout.uint64('supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('isInitialized'),\n  BufferLayout.u32('freezeAuthorityOption'),\n  Layout.publicKey('freezeAuthority'),\n]);\n\n/**\n * Information about an account\n */\ntype AccountInfo = {|\n  /**\n   * The address of this account\n   */\n  address: PublicKey,\n\n  /**\n   * The mint associated with this account\n   */\n  mint: PublicKey,\n\n  /**\n   * Owner of this account\n   */\n  owner: PublicKey,\n\n  /**\n   * Amount of tokens this account holds\n   */\n  amount: u64,\n\n  /**\n   * The delegate for this account\n   */\n  delegate: null | PublicKey,\n\n  /**\n   * The amount of tokens the delegate authorized to the delegate\n   */\n  delegatedAmount: u64,\n\n  /**\n   * Is this account initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Is this account frozen\n   */\n  isFrozen: boolean,\n\n  /**\n   * Is this a native token account\n   */\n  isNative: boolean,\n\n  /**\n   * If this account is a native token, it must be rent-exempt. This\n   * value logs the rent-exempt reserve which must remain in the balance\n   * until the account is closed.\n   */\n  rentExemptReserve: null | u64,\n\n  /**\n   * Optional authority to close the account\n   */\n  closeAuthority: null | PublicKey,\n|};\n\n/**\n * @private\n */\nexport const AccountLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.publicKey('mint'),\n    Layout.publicKey('owner'),\n    Layout.uint64('amount'),\n    BufferLayout.u32('delegateOption'),\n    Layout.publicKey('delegate'),\n    BufferLayout.u8('state'),\n    BufferLayout.u32('isNativeOption'),\n    Layout.uint64('isNative'),\n    Layout.uint64('delegatedAmount'),\n    BufferLayout.u32('closeAuthorityOption'),\n    Layout.publicKey('closeAuthority'),\n  ],\n);\n\n/**\n * Information about an multisig\n */\ntype MultisigInfo = {|\n  /**\n   * The number of signers required\n   */\n  m: number,\n\n  /**\n   * Number of possible signers, corresponds to the\n   * number of `signers` that are valid.\n   */\n  n: number,\n\n  /**\n   * Is this mint initialized\n   */\n  initialized: boolean,\n\n  /**\n   * The signers\n   */\n  signer1: PublicKey,\n  signer2: PublicKey,\n  signer3: PublicKey,\n  signer4: PublicKey,\n  signer5: PublicKey,\n  signer6: PublicKey,\n  signer7: PublicKey,\n  signer8: PublicKey,\n  signer9: PublicKey,\n  signer10: PublicKey,\n  signer11: PublicKey,\n|};\n\n/**\n * @private\n */\nconst MultisigLayout = BufferLayout.struct([\n  BufferLayout.u8('m'),\n  BufferLayout.u8('n'),\n  BufferLayout.u8('is_initialized'),\n  Layout.publicKey('signer1'),\n  Layout.publicKey('signer2'),\n  Layout.publicKey('signer3'),\n  Layout.publicKey('signer4'),\n  Layout.publicKey('signer5'),\n  Layout.publicKey('signer6'),\n  Layout.publicKey('signer7'),\n  Layout.publicKey('signer8'),\n  Layout.publicKey('signer9'),\n  Layout.publicKey('signer10'),\n  Layout.publicKey('signer11'),\n]);\n\n/**\n * An ERC20-like Token\n */\nexport class Token {\n  /**\n   * @private\n   */\n  connection: Connection;\n\n  /**\n   * The public key identifying this mint\n   */\n  publicKey: PublicKey;\n\n  /**\n   * Program Identifier for the Token program\n   */\n  programId: PublicKey;\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n  associatedProgramId: PublicKey;\n\n  /**\n   * Fee payer\n   */\n  payer: Account;\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  constructor(\n    connection: Connection,\n    publicKey: PublicKey,\n    programId: PublicKey,\n    payer: Account,\n  ) {\n    Object.assign(this, {\n      connection,\n      publicKey,\n      programId,\n      payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID,\n    });\n  }\n\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMint(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(MintLayout.span);\n  }\n\n  /**\n   * Get the minimum balance for the account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptAccount(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      AccountLayout.span,\n    );\n  }\n\n  /**\n   * Get the minimum balance for the multsig to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMultisig(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      MultisigLayout.span,\n    );\n  }\n\n  /**\n   * Create and initialize a token.\n   *\n   * @param connection The connection to use\n   * @param payer Fee payer for transaction\n   * @param mintAuthority Account or multisig that will control minting\n   * @param freezeAuthority Optional account or multisig that can freeze token accounts\n   * @param decimals Location of the decimal place\n   * @param programId Optional token programId, uses the system programId by default\n   * @return Token object for the newly minted token\n   */\n  static async createMint(\n    connection: Connection,\n    payer: Account,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n    decimals: number,\n    programId: PublicKey,\n  ): Promise<Token> {\n    const mintAccount = new Account();\n    const token = new Token(\n      connection,\n      mintAccount.publicKey,\n      programId,\n      payer,\n    );\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMint(\n      connection,\n    );\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: mintAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MintLayout.span,\n        programId,\n      }),\n    );\n\n    transaction.add(\n      Token.createInitMintInstruction(\n        programId,\n        mintAccount.publicKey,\n        decimals,\n        mintAuthority,\n        freezeAuthority,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMint',\n      connection,\n      transaction,\n      payer,\n      mintAccount,\n    );\n\n    return token;\n  }\n\n  /**\n   * Create and initialize a new account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new empty account\n   */\n  async createAccount(owner: PublicKey): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      this.connection,\n    );\n\n    const newAccount = new Account();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    const mintPublicKey = this.publicKey;\n    transaction.add(\n      Token.createInitAccountInstruction(\n        this.programId,\n        mintPublicKey,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeAccount',\n      this.connection,\n      transaction,\n      this.payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize the associated account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new associated account\n   */\n  async createAssociatedTokenAccount(owner: PublicKey): Promise<PublicKey> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n  }\n\n  async createAssociatedTokenAccountInternal(\n    owner: PublicKey,\n    associatedAddress: PublicKey,\n  ): Promise<PublicKey> {\n    await sendAndConfirmTransaction(\n      'CreateAssociatedTokenAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createAssociatedTokenAccountInstruction(\n          this.associatedProgramId,\n          this.programId,\n          this.publicKey,\n          associatedAddress,\n          owner,\n          this.payer.publicKey,\n        ),\n      ),\n      this.payer,\n    );\n\n    return associatedAddress;\n  }\n\n  /**\n   * Retrieve the associated account or create one if not found.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return The new associated account\n   */\n  async getOrCreateAssociatedAccountInfo(\n    owner: PublicKey,\n  ): Promise<AccountInfo> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    // This is the optimum logic, considering TX fee, client-side computation,\n    // RPC roundtrips and guaranteed idempotent.\n    // Sadly we can't do this atomically;\n    try {\n      return await this.getAccountInfo(associatedAddress);\n    } catch (err) {\n      // INVALID_ACCOUNT_OWNER can be possible if the associatedAddress has\n      // already been received some lamports (= became system accounts).\n      // Assuming program derived addressing is safe, this is the only case\n      // for the INVALID_ACCOUNT_OWNER in this code-path\n      if (\n        err.message === FAILED_TO_FIND_ACCOUNT ||\n        err.message === INVALID_ACCOUNT_OWNER\n      ) {\n        // as this isn't atomic, it's possible others can create associated\n        // accounts meanwhile\n        try {\n          await this.createAssociatedTokenAccountInternal(\n            owner,\n            associatedAddress,\n          );\n        } catch (err) {\n          // ignore all errors; for now there is no API compatible way to\n          // selectively ignore the expected instruction error if the\n          // associated account is existing already.\n        }\n\n        // Now this should always succeed\n        return await this.getAccountInfo(associatedAddress);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Create and initialize a new account on the special native token mint.\n   *\n   * In order to be wrapped, the account must have a balance of native tokens\n   * when it is initialized with the token program.\n   *\n   * This function sends lamports to the new account before initializing it.\n   *\n   * @param connection A solana web3 connection\n   * @param programId The token program ID\n   * @param owner The owner of the new token account\n   * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n   * @param amount The amount of lamports to wrap\n   * @return {Promise<PublicKey>} The new token account\n   */\n  static async createWrappedNativeAccount(\n    connection: Connection,\n    programId: PublicKey,\n    owner: PublicKey,\n    payer: Account,\n    amount: number,\n  ): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      connection,\n    );\n\n    // Create a new account\n    const newAccount = new Account();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId,\n      }),\n    );\n\n    // Send lamports to it (these will be wrapped into native tokens by the token program)\n    transaction.add(\n      SystemProgram.transfer({\n        fromPubkey: payer.publicKey,\n        toPubkey: newAccount.publicKey,\n        lamports: amount,\n      }),\n    );\n\n    // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n    transaction.add(\n      Token.createInitAccountInstruction(\n        programId,\n        NATIVE_MINT,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the three instructions\n    await sendAndConfirmTransaction(\n      'createAccount, transfer, and initializeAccount',\n      connection,\n      transaction,\n      payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize a new multisig.\n   *\n   * This account may then be used for multisignature verification\n   *\n   * @param m Number of required signatures\n   * @param signers Full set of signers\n   * @return Public key of the new multisig account\n   */\n  async createMultisig(\n    m: number,\n    signers: Array<PublicKey>,\n  ): Promise<PublicKey> {\n    const multisigAccount = new Account();\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMultisig(\n      this.connection,\n    );\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: multisigAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MultisigLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    // create the new account\n    let keys = [\n      {pubkey: multisigAccount.publicKey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    signers.forEach(signer =>\n      keys.push({pubkey: signer, isSigner: false, isWritable: false}),\n    );\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('m'),\n    ]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 2, // InitializeMultisig instruction\n        m,\n      },\n      data,\n    );\n    transaction.add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMultisig',\n      this.connection,\n      transaction,\n      this.payer,\n      multisigAccount,\n    );\n\n    return multisigAccount.publicKey;\n  }\n\n  /**\n   * Retrieve mint information\n   */\n  async getMintInfo(): Promise<MintInfo> {\n    const info = await this.connection.getAccountInfo(this.publicKey);\n    if (info === null) {\n      throw new Error('Failed to find mint account');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid mint owner: ${JSON.stringify(info.owner)}`);\n    }\n    if (info.data.length != MintLayout.span) {\n      throw new Error(`Invalid mint size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const mintInfo = MintLayout.decode(data);\n\n    if (mintInfo.mintAuthorityOption === 0) {\n      mintInfo.mintAuthority = null;\n    } else {\n      mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n    }\n\n    mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n    mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n    if (mintInfo.freezeAuthorityOption === 0) {\n      mintInfo.freezeAuthority = null;\n    } else {\n      mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n    }\n    return mintInfo;\n  }\n\n  /**\n   * Retrieve account information\n   *\n   * @param account Public key of the account\n   */\n  async getAccountInfo(\n    account: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo> {\n    const info = await this.connection.getAccountInfo(account, commitment);\n    if (info === null) {\n      throw new Error(FAILED_TO_FIND_ACCOUNT);\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(INVALID_ACCOUNT_OWNER);\n    }\n    if (info.data.length != AccountLayout.span) {\n      throw new Error(`Invalid account size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const accountInfo = AccountLayout.decode(data);\n    accountInfo.address = account;\n    accountInfo.mint = new PublicKey(accountInfo.mint);\n    accountInfo.owner = new PublicKey(accountInfo.owner);\n    accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n    if (accountInfo.delegateOption === 0) {\n      accountInfo.delegate = null;\n      accountInfo.delegatedAmount = new u64();\n    } else {\n      accountInfo.delegate = new PublicKey(accountInfo.delegate);\n      accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n\n    if (accountInfo.isNativeOption === 1) {\n      accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n      accountInfo.isNative = true;\n    } else {\n      accountInfo.rentExemptReserve = null;\n      accountInfo.isNative = false;\n    }\n\n    if (accountInfo.closeAuthorityOption === 0) {\n      accountInfo.closeAuthority = null;\n    } else {\n      accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n    }\n\n    if (!accountInfo.mint.equals(this.publicKey)) {\n      throw new Error(\n        `Invalid account mint: ${JSON.stringify(\n          accountInfo.mint,\n        )} !== ${JSON.stringify(this.publicKey)}`,\n      );\n    }\n    return accountInfo;\n  }\n\n  /**\n   * Retrieve Multisig information\n   *\n   * @param multisig Public key of the account\n   */\n  async getMultisigInfo(multisig: PublicKey): Promise<MultisigInfo> {\n    const info = await this.connection.getAccountInfo(multisig);\n    if (info === null) {\n      throw new Error('Failed to find multisig');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid multisig owner`);\n    }\n    if (info.data.length != MultisigLayout.span) {\n      throw new Error(`Invalid multisig size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const multisigInfo = MultisigLayout.decode(data);\n    multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n    multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n    multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n    multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n    multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n    multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n    multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n    multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n    multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n    multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n    multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n\n    return multisigInfo;\n  }\n\n  /**\n   * Transfer tokens to another account\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  async transfer(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'Transfer',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferInstruction(\n          this.programId,\n          source,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  async approve(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Approve',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveInstruction(\n          this.programId,\n          account,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Remove approval for the transfer of any remaining tokens\n   *\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  async revoke(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Account>,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Revoke',\n      this.connection,\n      new Transaction().add(\n        Token.createRevokeInstruction(\n          this.programId,\n          account,\n          ownerPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Assign a new authority to the account\n   *\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the account\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  async setAuthority(\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: any,\n    multiSigners: Array<Account>,\n  ): Promise<void> {\n    let currentAuthorityPublicKey: PublicKey;\n    let signers;\n    if (isAccount(currentAuthority)) {\n      currentAuthorityPublicKey = currentAuthority.publicKey;\n      signers = [currentAuthority];\n    } else {\n      currentAuthorityPublicKey = currentAuthority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'SetAuthority',\n      this.connection,\n      new Transaction().add(\n        Token.createSetAuthorityInstruction(\n          this.programId,\n          account,\n          newAuthority,\n          authorityType,\n          currentAuthorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  async mintTo(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintTo',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   */\n  async burn(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Burn',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Close account\n   *\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Authority which is allowed to close the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async closeAccount(\n    account: PublicKey,\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Account>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'CloseAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createCloseAccountInstruction(\n          this.programId,\n          account,\n          dest,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Freeze account\n   *\n   * @param account Account to freeze\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async freezeAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Account>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'FreezeAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createFreezeAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Thaw account\n   *\n   * @param account Account to thaw\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async thawAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Account>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ThawAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createThawAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Transfer tokens to another account, asserting the token mint and decimals\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  async transferChecked(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'TransferChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferCheckedInstruction(\n          this.programId,\n          source,\n          this.publicKey,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account,\n   * asserting the token mint and decimals\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  async approveChecked(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ApproveChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveCheckedInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens, asserting the token mint and decimals\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  async mintToChecked(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintToChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens, asserting the token mint and decimals\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   * @param decimals Number of decimals in amount to burn\n   */\n  async burnChecked(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'BurnChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Construct an InitializeMint instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param decimals Number of decimals in token account amounts\n   * @param mintAuthority Minting authority\n   * @param freezeAuthority Optional authority that can freeze token accounts\n   */\n  static createInitMintInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    decimals: number,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n  ): TransactionInstruction {\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('decimals'),\n      Layout.publicKey('mintAuthority'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('freezeAuthority'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeMint instruction\n          decimals,\n          mintAuthority: pubkeyToBuffer(mintAuthority),\n          option: freezeAuthority === null ? 0 : 1,\n          freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey()),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an InitializeAccount instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param account New account\n   * @param owner Owner of the new account\n   */\n  static createInitAccountInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n  ): TransactionInstruction {\n    const keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 1, // InitializeAccount instruction\n      },\n      data,\n    );\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Transfer instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  static createTransferInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 3, // Transfer instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an Approve instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  static createApproveInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 4, // Approve instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Revoke instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createRevokeInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Account>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 5, // Approve instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SetAuthority instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the specified type\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  static createSetAuthorityInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: PublicKey,\n    multiSigners: Array<Account>,\n  ): TransactionInstruction {\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('authorityType'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('newAuthority'),\n    ]);\n\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 6, // SetAuthority instruction\n          authorityType: AuthorityTypeCodes[authorityType],\n          option: newAuthority === null ? 0 : 1,\n          newAuthority: pubkeyToBuffer(newAuthority || new PublicKey()),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: currentAuthority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: currentAuthority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintTo instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  static createMintToInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 7, // MintTo instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Burn instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 8, // Burn instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Close instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Account Close authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createCloseAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    dest: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Account>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 9, // CloseAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Freeze instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to freeze\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createFreezeAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Account>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 10, // FreezeAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Thaw instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to thaw\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createThawAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Account>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 11, // ThawAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a TransferChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param mint Mint account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  static createTransferCheckedInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    mint: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 12, // TransferChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an ApproveChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param mint Mint account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  static createApproveCheckedInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 13, // ApproveChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintToChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  static createMintToCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 14, // MintToChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a BurnChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Account>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 15, // BurnChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Get the address for the associated token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param owner Owner of the new account\n   * @return Public key of the associated token account\n   */\n  static async getAssociatedTokenAddress(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    owner: PublicKey,\n  ): Promise<PublicKey> {\n    return (\n      await PublicKey.findProgramAddress(\n        [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n        associatedProgramId,\n      )\n    )[0];\n  }\n\n  /**\n   * Construct the AssociatedTokenProgram instruction to create the associated\n   * token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param associatedAccount New associated account\n   * @param owner Owner of the new account\n   * @param payer Payer of fees\n   */\n  static createAssociatedTokenAccountInstruction(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    associatedAccount: PublicKey,\n    owner: PublicKey,\n    payer: PublicKey,\n  ): TransactionInstruction {\n    const data = Buffer.alloc(0);\n\n    let keys = [\n      {pubkey: payer, isSigner: true, isWritable: true},\n      {pubkey: associatedAccount, isSigner: false, isWritable: true},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: SystemProgram.programId, isSigner: false, isWritable: false},\n      {pubkey: programId, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n\n    return new TransactionInstruction({\n      keys,\n      programId: associatedProgramId,\n      data,\n    });\n  }\n}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","// @flow\n\nimport {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (arr instanceof Buffer) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","// base-x encoding\n// Forked from https://github.com/cryptocoinjs/bs58\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function base (ALPHABET) {\n  var ALPHABET_MAP = {}\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n\n  // pre-compute lookup table\n  for (var z = 0; z < ALPHABET.length; z++) {\n    var x = ALPHABET.charAt(z)\n\n    if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n    ALPHABET_MAP[x] = z\n  }\n\n  function encode (source) {\n    if (source.length === 0) return ''\n\n    var digits = [0]\n    for (var i = 0; i < source.length; ++i) {\n      for (var j = 0, carry = source[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8\n        digits[j] = carry % BASE\n        carry = (carry / BASE) | 0\n      }\n\n      while (carry > 0) {\n        digits.push(carry % BASE)\n        carry = (carry / BASE) | 0\n      }\n    }\n\n    var string = ''\n\n    // deal with leading zeros\n    for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) string += LEADER\n    // convert digits to a string\n    for (var q = digits.length - 1; q >= 0; --q) string += ALPHABET[digits[q]]\n\n    return string\n  }\n\n  function decodeUnsafe (string) {\n    if (typeof string !== 'string') throw new TypeError('Expected String')\n    if (string.length === 0) return Buffer.allocUnsafe(0)\n\n    var bytes = [0]\n    for (var i = 0; i < string.length; i++) {\n      var value = ALPHABET_MAP[string[i]]\n      if (value === undefined) return\n\n      for (var j = 0, carry = value; j < bytes.length; ++j) {\n        carry += bytes[j] * BASE\n        bytes[j] = carry & 0xff\n        carry >>= 8\n      }\n\n      while (carry > 0) {\n        bytes.push(carry & 0xff)\n        carry >>= 8\n      }\n    }\n\n    // deal with leading zeros\n    for (var k = 0; string[k] === LEADER && k < string.length - 1; ++k) {\n      bytes.push(0)\n    }\n\n    return Buffer.from(bytes.reverse())\n  }\n\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) return buffer\n\n    throw new Error('Non-base' + BASE + ' character')\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","// @flow\n\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport nacl from 'tweetnacl';\nimport {sha256} from 'crypto-hash';\nimport {Buffer} from 'buffer';\n\nlet naclLowLevel = nacl.lowlevel;\n\ntype PublicKeyNonce = [PublicKey, number]; // This type exists to workaround an esdoc parse error\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * A public key\n */\nexport class PublicKey {\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   */\n  constructor(value: number | string | Buffer | Uint8Array | Array<number>) {\n    if (typeof value === 'string') {\n      // assume base 58 encoding by default\n      const decoded = bs58.decode(value);\n      if (decoded.length != 32) {\n        throw new Error(`Invalid public key input`);\n      }\n      this._bn = new BN(decoded);\n    } else {\n      this._bn = new BN(value);\n    }\n\n    if (this._bn.byteLength() > 32) {\n      throw new Error(`Invalid public key input`);\n    }\n  }\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBuffer());\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Returns a string representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = await sha256(new Uint8Array(buffer));\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new Error(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, Buffer.from(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = await sha256(new Uint8Array(buffer));\n    let publicKeyBytes = new BN(hash, 16).toArray(null, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKeyNonce> {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = await this.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n}\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0,\n  0x4a0e,\n  0x1b27,\n  0xc4ee,\n  0xe478,\n  0xad2f,\n  0x1806,\n  0x2f43,\n  0xd7a7,\n  0x3dfb,\n  0x0099,\n  0x2b4d,\n  0xdf0b,\n  0x4fc1,\n  0x2480,\n  0x2b83,\n]);\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","// @flow\nimport nacl from 'tweetnacl';\nimport type {KeyPair} from 'tweetnacl';\n\nimport {toBuffer} from './util/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n */\nexport class Account {\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return this._keypair.secretKey;\n  }\n}\n","// @flow\n\nimport {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","// @flow\n\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (property: string = 'string') => {\n  const rsl = BufferLayout.struct(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer, offset) => {\n    const data = _decode(buffer, offset);\n    return data.chars.toString('utf8');\n  };\n\n  rsl.encode = (str, buffer, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  rsl.alloc = str => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rsl;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct(\n    [publicKey('staker'), publicKey('withdrawer')],\n    property,\n  );\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: Object, fields: Object): number {\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","// @flow\n\nexport function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","// @flow\n\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from 'buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction';\nimport * as shortvec from './util/shortvec-encoding';\n\n/**\n * The message header, identifying signed and read-only account\n *\n * @typedef {Object} MessageHeader\n * @property {number} numRequiredSignatures The number of signatures required for this message to be considered valid. The\n * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n * @property {number} numReadonlySignedAccounts: The last `numReadonlySignedAccounts` of the signed keys are read-only accounts\n * @property {number} numReadonlyUnsignedAccounts The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts\n */\nexport type MessageHeader = {\n  numRequiredSignatures: number,\n  numReadonlySignedAccounts: number,\n  numReadonlyUnsignedAccounts: number,\n};\n\n/**\n * An instruction to execute by a program\n *\n * @typedef {Object} CompiledInstruction\n * @property {number} programIdIndex Index into the transaction keys array indicating the program account that executes this instruction\n * @property {number[]} accounts Ordered indices into the transaction keys array indicating which accounts to pass to the program\n * @property {string} data The program input data encoded as base 58\n */\nexport type CompiledInstruction = {\n  programIdIndex: number,\n  accounts: number[],\n  data: string,\n};\n\n/**\n * Message constructor arguments\n *\n * @typedef {Object} MessageArgs\n * @property {MessageHeader} header The message header, identifying signed and read-only `accountKeys`\n * @property {string[]} accounts All the account keys used by this transaction\n * @property {Blockhash} recentBlockhash The hash of a recent ledger block\n * @property {CompiledInstruction[]} instructions Instructions that will be executed in sequence and committed in one atomic transaction if all succeed.\n */\ntype MessageArgs = {\n  header: MessageHeader,\n  accountKeys: string[],\n  recentBlockhash: Blockhash,\n  instructions: CompiledInstruction[],\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = bs58.decode(instruction.data);\n\n      let keyIndicesCount = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: Buffer.from(accounts),\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => key.toBuffer()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift();\n    const numReadonlySignedAccounts = byteArray.shift();\n    const numReadonlyUnsignedAccounts = byteArray.shift();\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      let instruction = {};\n      instruction.programIdIndex = byteArray.shift();\n      const accountCount = shortvec.decodeLength(byteArray);\n      instruction.accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = byteArray.slice(0, dataLength);\n      instruction.data = bs58.encode(Buffer.from(data));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push(instruction);\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","// @flow\n\nimport invariant from 'assert';\nimport nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport type {CompiledInstruction} from './message';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport {Account} from './account';\nimport * as shortvec from './util/shortvec-encoding';\nimport type {Blockhash} from './blockhash';\n\n/**\n * @typedef {string} TransactionSignature\n */\nexport type TransactionSignature = string;\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nconst SIGNATURE_LENGTH = 64;\n\n/**\n * Account metadata used to define instructions\n *\n * @typedef {Object} AccountMeta\n * @property {PublicKey} pubkey An account's public key\n * @property {boolean} isSigner True if an instruction requires a transaction signature matching `pubkey`\n * @property {boolean} isWritable True if the `pubkey` can be loaded as a read-write account.\n */\nexport type AccountMeta = {\n  pubkey: PublicKey,\n  isSigner: boolean,\n  isWritable: boolean,\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n *\n * @typedef {Object} TransactionInstructionCtorFields\n * @property {?Array<PublicKey>} keys\n * @property {?PublicKey} programId\n * @property {?Buffer} data\n */\nexport type TransactionInstructionCtorFields = {|\n  keys?: Array<AccountMeta>,\n  programId?: PublicKey,\n  data?: Buffer,\n|};\n\n/**\n * Configuration object for Transaction.serialize()\n *\n * @typedef {Object} SerializeConfig\n * @property {boolean|undefined} requireAllSignatures Require all transaction signatures be present (default: true)\n * @property {boolean|undefined} verifySignatures Verify provided signatures (default: true)\n */\nexport type SerializeConfig = {\n  requireAllSignatures?: boolean,\n  verifySignatures?: boolean,\n};\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta> = [];\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts?: TransactionInstructionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n}\n\n/**\n * @private\n */\ntype SignaturePubkeyPair = {|\n  signature: Buffer | null,\n  publicKey: PublicKey,\n|};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n * @typedef {Object} TransactionCtorFields\n * @property {?Blockhash} recentBlockhash A recent blockhash\n * @property {?PublicKey} feePayer The transaction fee payer\n * @property {?Array<SignaturePubkeyPair>} signatures One or more signatures\n *\n */\ntype TransactionCtorFields = {|\n  recentBlockhash?: Blockhash | null,\n  nonceInfo?: NonceInformation | null,\n  feePayer?: PublicKey | null,\n  signatures?: Array<SignaturePubkeyPair>,\n|};\n\n/**\n * NonceInformation to be used to build a Transaction.\n *\n * @typedef {Object} NonceInformation\n * @property {Blockhash} nonce The current Nonce blockhash\n * @property {TransactionInstruction} nonceInstruction AdvanceNonceAccount Instruction\n */\ntype NonceInformation = {|\n  nonce: Blockhash,\n  nonceInstruction: TransactionInstruction,\n|};\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer: ?PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash: ?Blockhash;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo: ?NonceInformation;\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts?: TransactionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields,\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      throw new Error('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    accountMetas.sort(function (x, y) {\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable =\n        x.isWritable === y.isWritable ? 0 : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified accounts. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Account>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n    this._verifySignatures(message.serialize(), true);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Account>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @private\n   */\n  _partialSign(message: Message, ...signers: Array<Account>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, signature);\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @private\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @private\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @private\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @private\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @private\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @private\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(message: Message, signatures: Array<string>): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(\n            keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n          ),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    return transaction;\n  }\n}\n","// @flow\nimport {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\nfunction stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n}\n\nexport function stringify (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\nexport function parse(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\nexport default {\n  encode: stringify,\n  stringify: stringify,\n  decode: parse,\n  parse: parse\n}\nexport {stringify as encode, parse as decode};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nimport {toASCII} from 'punycode';\nimport {isObject,isString,isNullOrUndefined,isNull} from 'util';\nimport {parse as qsParse,stringify as qsStringify} from 'querystring';\nexport {\n  urlParse as parse,\n  urlResolve as resolve,\n  urlResolveObject as resolveObject,\n  urlFormat as format\n};\nexport default {\n  parse: urlParse,\n  resolve: urlResolve,\n  resolveObject: urlResolveObject,\n  format: urlFormat,\n  Url: Url\n}\nexport function Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n  // RFC 2396: characters reserved for delimiting URLs.\n  // We actually just auto-escape these.\n  delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  // Characters that are never ever allowed in a hostname.\n  // Note that any invalid chars are also handled, but these\n  // are the ones that are *expected* to be seen, so we fast-path\n  // them.\n  nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n  hostEndingChars = ['/', '?', '#'],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    'http': true,\n    'https': true,\n    'ftp': true,\n    'gopher': true,\n    'file': true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  };\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  return parse(this, url, parseQueryString, slashesDenoteHost);\n}\n\nfunction parse(self, url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError('Parameter \\'url\\' must be a string, not ' + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n    splitter =\n    (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      self.path = rest;\n      self.href = rest;\n      self.pathname = simplePath[1];\n      if (simplePath[2]) {\n        self.search = simplePath[2];\n        if (parseQueryString) {\n          self.query = qsParse(self.search.substr(1));\n        } else {\n          self.query = self.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        self.search = '';\n        self.query = {};\n      }\n      return self;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    self.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      self.slashes = true;\n    }\n  }\n  var i, hec, l, p;\n  if (!hostlessProtocol[proto] &&\n    (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      self.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    self.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    parseHost(self);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    self.hostname = self.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = self.hostname[0] === '[' &&\n      self.hostname[self.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = self.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            self.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (self.hostname.length > hostnameMaxLen) {\n      self.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      self.hostname = self.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      self.hostname = toASCII(self.hostname);\n    }\n\n    p = self.port ? ':' + self.port : '';\n    var h = self.hostname || '';\n    self.host = h + p;\n    self.href += self.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      self.hostname = self.hostname.substr(1, self.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    self.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    self.search = rest.substr(qm);\n    self.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      self.query = qsParse(self.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    self.search = '';\n    self.query = {};\n  }\n  if (rest) self.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n    self.hostname && !self.pathname) {\n    self.pathname = '/';\n  }\n\n  //to support http.request\n  if (self.pathname || self.search) {\n    p = self.pathname || '';\n    var s = self.search || '';\n    self.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  self.href = format(self);\n  return self;\n}\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = parse({}, obj);\n  return format(obj);\n}\n\nfunction format(self) {\n  var auth = self.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = self.protocol || '',\n    pathname = self.pathname || '',\n    hash = self.hash || '',\n    host = false,\n    query = '';\n\n  if (self.host) {\n    host = auth + self.host;\n  } else if (self.hostname) {\n    host = auth + (self.hostname.indexOf(':') === -1 ?\n      self.hostname :\n      '[' + this.hostname + ']');\n    if (self.port) {\n      host += ':' + self.port;\n    }\n  }\n\n  if (self.query &&\n    isObject(self.query) &&\n    Object.keys(self.query).length) {\n    query = qsStringify(self.query);\n  }\n\n  var search = self.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (self.slashes ||\n    (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n}\n\nUrl.prototype.format = function() {\n  return format(this);\n}\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n      result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n  var relPath;\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n    isRelAbs = (\n      relative.host ||\n      relative.pathname && relative.pathname.charAt(0) === '/'\n    ),\n    mustEndAbs = (isRelAbs || isSourceAbs ||\n      (result.host && relative.pathname)),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n  relPath = relative.pathname && relative.pathname.split('/') || [];\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n  var authInHost;\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n      relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      authInHost = result.host && result.host.indexOf('@') > 0 ?\n        result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n        (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n    (result.host || relative.host || srcPath.length > 1) &&\n    (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n    (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n    (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n      srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    authInHost = result.host && result.host.indexOf('@') > 0 ?\n      result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n      (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  return parseHost(this);\n};\n\nfunction parseHost(self) {\n  var host = self.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      self.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) self.hostname = host;\n}\n","// @flow\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @private\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * @typedef {Object} FeeCalculator\n * @property {number} lamportsPerSignature lamports Cost in lamports to validate a signature\n */\nexport type FeeCalculator = {\n  lamportsPerSignature: number,\n};\n","// @flow\nimport * as BufferLayout from 'buffer-layout';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @private\n */\nconst NonceAccountLayout = BufferLayout.struct([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator'),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    nonceAccount.authorizedPubkey = new PublicKey(\n      nonceAccount.authorizedPubkey,\n    );\n    nonceAccount.nonce = new PublicKey(nonceAccount.nonce).toString();\n    return nonceAccount;\n  }\n}\n","// @flow\n\nimport assert from 'assert';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {parse as urlParse, format as urlFormat} from 'url';\nimport fetch from 'node-fetch';\nimport jayson from 'jayson/lib/client/browser';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\n\nimport {AgentManager} from './agent-manager';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction} from './transaction';\nimport {Message} from './message';\nimport {sleep} from './util/sleep';\nimport {promiseTimeout} from './util/promise-timeout';\nimport {toBuffer} from './util/to-buffer';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {Account} from './account';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype TokenAccountsFilter =\n  | {|\n      mint: PublicKey,\n    |}\n  | {|\n      programId: PublicKey,\n    |};\n\n/**\n * Extra contextual information for RPC responses\n *\n * @typedef {Object} Context\n * @property {number} slot\n */\ntype Context = {\n  slot: number,\n};\n\n/**\n * Options for sending transactions\n *\n * @typedef {Object} SendOptions\n * @property {boolean | undefined} skipPreflight disable transaction verification step\n * @property {Commitment | undefined} preflightCommitment preflight commitment level\n */\nexport type SendOptions = {\n  skipPreflight?: boolean,\n  preflightCommitment?: Commitment,\n};\n\n/**\n * Options for confirming transactions\n *\n * @typedef {Object} ConfirmOptions\n * @property {boolean | undefined} skipPreflight disable transaction verification step\n * @property {Commitment | undefined} commitment desired commitment level\n * @property {Commitment | undefined} preflightCommitment preflight commitment level\n */\nexport type ConfirmOptions = {\n  skipPreflight?: boolean,\n  commitment?: Commitment,\n  preflightCommitment?: Commitment,\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n *\n * @typedef {Object} ConfirmedSignaturesForAddress2Options\n * @property {TransactionSignature | undefined} before start searching backwards from this transaction signature.\n *               If not provided the search starts from the highest max confirmed block.\n * @property {number | undefined} limit maximum transaction signatures to return (between 1 and 1,000, default: 1,000).\n *\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  before?: TransactionSignature,\n  limit?: number,\n};\n\n/**\n * RPC Response with extra contextual information\n *\n * @typedef {Object} RpcResponseAndContext\n * @property {Context} context\n * @property {T} value response\n */\ntype RpcResponseAndContext<T> = {\n  context: Context,\n  value: T,\n};\n\n/**\n * @private\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(unknown()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @private\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @private\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @private\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n *\n * @typedef {'processed' | 'confirmed' | 'finalized'} Commitment\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n *\n * @typedef {'circulating' | 'nonCirculating'} LargestAccountsFilter\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n *\n * @typedef {Object} GetLargestAccountsConfig\n * @property {Commitment|undefined} commitment The level of commitment desired\n * @property {LargestAccountsFilter|undefined} filter Filter largest accounts by whether they are part of the circulating supply\n */\ntype GetLargestAccountsConfig = {\n  commitment: ?Commitment,\n  filter: ?LargestAccountsFilter,\n};\n\n/**\n * Configuration object for changing query behavior\n *\n * @typedef {Object} SignatureStatusConfig\n * @property {boolean} searchTransactionHistory enable searching status history, not needed for recent transactions\n */\nexport type SignatureStatusConfig = {\n  searchTransactionHistory: boolean,\n};\n\n/**\n * Information describing a cluster node\n *\n * @typedef {Object} ContactInfo\n * @property {string} pubkey Identity public key of the node\n * @property {string|null} gossip Gossip network address for the node\n * @property {string|null} tpu TPU network address for the node (null if not available)\n * @property {string|null} rpc JSON RPC network address for the node (null if not available)\n * @property {string|null} version Software version of the node (null if not available)\n */\ntype ContactInfo = {\n  pubkey: string,\n  gossip: string | null,\n  tpu: string | null,\n  rpc: string | null,\n  version: string | null,\n};\n\n/**\n * Information describing a vote account\n *\n * @typedef {Object} VoteAccountInfo\n * @property {string} votePubkey Public key of the vote account\n * @property {string} nodePubkey Identity public key of the node voting with this account\n * @property {number} activatedStake The stake, in lamports, delegated to this vote account and activated\n * @property {boolean} epochVoteAccount Whether the vote account is staked for this epoch\n * @property {Array<Array<number>>} epochCredits Recent epoch voting credit history for this voter\n * @property {number} commission A percentage (0-100) of rewards payout owed to the voter\n * @property {number} lastVote Most recent slot voted on by this vote account\n */\ntype VoteAccountInfo = {\n  votePubkey: string,\n  nodePubkey: string,\n  activatedStake: number,\n  epochVoteAccount: boolean,\n  epochCredits: Array<[number, number, number]>,\n  commission: number,\n  lastVote: number,\n};\n\n/**\n * A collection of cluster vote accounts\n *\n * @typedef {Object} VoteAccountStatus\n * @property {Array<VoteAccountInfo>} current Active vote accounts\n * @property {Array<VoteAccountInfo>} delinquent Inactive vote accounts\n */\ntype VoteAccountStatus = {\n  current: Array<VoteAccountInfo>,\n  delinquent: Array<VoteAccountInfo>,\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n *\n * @typedef {Object} InflationGovernor\n * @property {number} foundation\n * @property {number} foundation_term\n * @property {number} initial\n * @property {number} taper\n * @property {number} terminal\n */\ntype InflationGovernor = {\n  foundation: number,\n  foundationTerm: number,\n  initial: number,\n  taper: number,\n  terminal: number,\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * Information about the current epoch\n *\n * @typedef {Object} EpochInfo\n * @property {number} epoch\n * @property {number} slotIndex\n * @property {number} slotsInEpoch\n * @property {number} absoluteSlot\n * @property {number} blockHeight\n * @property {number} transactionCount\n */\ntype EpochInfo = {\n  epoch: number,\n  slotIndex: number,\n  slotsInEpoch: number,\n  absoluteSlot: number,\n  blockHeight: number | null,\n  transactionCount: number | null,\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n *\n * @typedef {Object} EpochSchedule\n * @property {number} slotsPerEpoch The maximum number of slots in each epoch\n * @property {number} leaderScheduleSlotOffset The number of slots before beginning of an epoch to calculate a leader schedule for that epoch\n * @property {boolean} warmup Indicates whether epochs start short and grow\n * @property {number} firstNormalEpoch The first epoch with `slotsPerEpoch` slots\n * @property {number} firstNormalSlot The first slot of `firstNormalEpoch`\n */\ntype EpochSchedule = {\n  slotsPerEpoch: number,\n  leaderScheduleSlotOffset: number,\n  warmup: boolean,\n  firstNormalEpoch: number,\n  firstNormalSlot: number,\n};\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n *\n * @typedef {Object} LeaderSchedule\n */\ntype LeaderSchedule = {\n  [address: string]: number[],\n};\n\n// TODO: check if validating array(number()) is still extremely slow\nconst GetLeaderScheduleResult = record(string(), unknown());\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(pick({}));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Version info for a node\n *\n * @typedef {Object} Version\n * @property {string} solana-core Version of solana-core\n */\nconst Version = pick({\n  'solana-core': string(),\n  'feature-set': optional(nullable(number())),\n});\n\ntype SimulatedTransactionResponse = {\n  err: TransactionError | string | null,\n  logs: Array<string> | null,\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n  }),\n);\n\ntype ParsedInnerInstruction = {\n  index: number,\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[],\n};\n\ntype TokenBalance = {\n  accountIndex: number,\n  mint: string,\n  uiTokenAmount: TokenAmount,\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @typedef {Object} ParsedConfirmedTransactionMeta\n * @property {number} fee The fee charged for processing the transaction\n * @property {Array<ParsedInnerInstruction>} innerInstructions An array of cross program invoked parsed instructions\n * @property {Array<number>} preBalances The balances of the transaction accounts before processing\n * @property {Array<number>} postBalances The balances of the transaction accounts after processing\n * @property {Array<string>} logMessages An array of program log messages emitted during a transaction\n * @property {Array<TokenBalance>} preTokenBalances The token balances of the transaction accounts before processing\n * @property {Array<TokenBalance>} postTokenBalances The token balances of the transaction accounts after processing\n * @property {object|null} err The error result of transaction processing\n */\ntype ParsedConfirmedTransactionMeta = {\n  fee: number,\n  innerInstructions?: ParsedInnerInstruction[],\n  preBalances: Array<number>,\n  postBalances: Array<number>,\n  logMessages?: Array<string>,\n  preTokenBalances?: Array<TokenBalance>,\n  postTokenBalances?: Array<TokenBalance>,\n  err: TransactionError | null,\n};\n\ntype CompiledInnerInstruction = {\n  index: number,\n  instructions: CompiledInstruction[],\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n *\n * @typedef {Object} ConfirmedTransactionMeta\n * @property {number} fee The fee charged for processing the transaction\n * @property {Array<CompiledInnerInstruction>} innerInstructions An array of cross program invoked instructions\n * @property {Array<number>} preBalances The balances of the transaction accounts before processing\n * @property {Array<number>} postBalances The balances of the transaction accounts after processing\n * @property {Array<string>} logMessages An array of program log messages emitted during a transaction\n * @property {Array<TokenBalance>} preTokenBalances The token balances of the transaction accounts before processing\n * @property {Array<TokenBalance>} postTokenBalances The token balances of the transaction accounts after processing\n * @property {object|null} err The error result of transaction processing\n */\ntype ConfirmedTransactionMeta = {\n  fee: number,\n  innerInstructions?: CompiledInnerInstruction[],\n  preBalances: Array<number>,\n  postBalances: Array<number>,\n  logMessages?: Array<string>,\n  preTokenBalances?: Array<TokenBalance>,\n  postTokenBalances?: Array<TokenBalance>,\n  err: TransactionError | null,\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @typedef {Object} ConfirmedTransaction\n * @property {number} slot The slot during which the transaction was processed\n * @property {Transaction} transaction The details of the transaction\n * @property {ConfirmedTransactionMeta|null} meta Metadata produced from the transaction\n * @property {number|null|undefined} blockTime The unix timestamp of when the transaction was processed\n */\ntype ConfirmedTransaction = {\n  slot: number,\n  transaction: Transaction,\n  meta: ConfirmedTransactionMeta | null,\n  blockTime?: number | null,\n};\n\n/**\n * A partially decoded transaction instruction\n *\n * @typedef {Object} ParsedMessageAccount\n * @property {PublicKey} pubkey Public key of the account\n * @property {PublicKey} accounts Indicates if the account signed the transaction\n * @property {string} data Raw base-58 instruction data\n */\ntype PartiallyDecodedInstruction = {|\n  programId: PublicKey,\n  accounts: Array<PublicKey>,\n  data: string,\n|};\n\n/**\n * A parsed transaction message account\n *\n * @typedef {Object} ParsedMessageAccount\n * @property {PublicKey} pubkey Public key of the account\n * @property {boolean} signer Indicates if the account signed the transaction\n * @property {boolean} writable Indicates if the account is writable for this transaction\n */\ntype ParsedMessageAccount = {\n  pubkey: PublicKey,\n  signer: boolean,\n  writable: boolean,\n};\n\n/**\n * A parsed transaction instruction\n *\n * @typedef {Object} ParsedInstruction\n * @property {string} program Name of the program for this instruction\n * @property {PublicKey} programId ID of the program for this instruction\n * @property {any} parsed Parsed instruction info\n */\ntype ParsedInstruction = {|\n  program: string,\n  programId: PublicKey,\n  parsed: any,\n|};\n\n/**\n * A parsed transaction message\n *\n * @typedef {Object} ParsedMessage\n * @property {Array<ParsedMessageAccount>} accountKeys Accounts used in the instructions\n * @property {Array<ParsedInstruction | PartiallyDecodedInstruction>} instructions The atomically executed instructions for the transaction\n * @property {string} recentBlockhash Recent blockhash\n */\ntype ParsedMessage = {\n  accountKeys: ParsedMessageAccount[],\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[],\n  recentBlockhash: string,\n};\n\n/**\n * A parsed transaction\n *\n * @typedef {Object} ParsedTransaction\n * @property {Array<string>} signatures Signatures for the transaction\n * @property {ParsedMessage} message Message of the transaction\n */\ntype ParsedTransaction = {\n  signatures: Array<string>,\n  message: ParsedMessage,\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @typedef {Object} ParsedConfirmedTransaction\n * @property {number} slot The slot during which the transaction was processed\n * @property {ParsedTransaction} transaction The details of the transaction\n * @property {ConfirmedTransactionMeta|null} meta Metadata produced from the transaction\n * @property {number|null|undefined} blockTime The unix timestamp of when the transaction was processed\n */\ntype ParsedConfirmedTransaction = {\n  slot: number,\n  transaction: ParsedTransaction,\n  meta: ParsedConfirmedTransactionMeta | null,\n  blockTime?: number | null,\n};\n\n/**\n * A ConfirmedBlock on the ledger\n *\n * @typedef {Object} ConfirmedBlock\n * @property {Blockhash} blockhash Blockhash of this block\n * @property {Blockhash} previousBlockhash Blockhash of this block's parent\n * @property {number} parentSlot Slot index of this block's parent\n * @property {Array<object>} transactions Vector of transactions and status metas\n * @property {Array<object>} rewards Vector of block rewards\n */\ntype ConfirmedBlock = {\n  blockhash: Blockhash,\n  previousBlockhash: Blockhash,\n  parentSlot: number,\n  transactions: Array<{\n    transaction: Transaction,\n    meta: ConfirmedTransactionMeta | null,\n  }>,\n  rewards: Array<{\n    pubkey: string,\n    lamports: number,\n    postBalance: number | null,\n    rewardType: string | null,\n  }>,\n};\n\n/**\n * A performance sample\n *\n * @typedef {Object} PerfSample\n * @property {number} slot Slot number of sample\n * @property {number} numTransactions Number of transactions in a sample window\n * @property {number} numSlots Number of slots in a sample window\n * @property {number} samplePeriodSecs Sample window in seconds\n */\ntype PerfSample = {\n  slot: number,\n  numTransactions: number,\n  numSlots: number,\n  samplePeriodSecs: number,\n};\n\nfunction createRpcRequest(url: string, useHttps: boolean): RpcRequest {\n  let agentManager;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  const server = jayson(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res = {};\n      let waitTime = 500;\n      for (;;) {\n        res = await fetch(url, options);\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  });\n\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      server.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n *\n * @typedef {Object} Supply\n * @property {number} total Total supply in lamports\n * @property {number} circulating Circulating supply in lamports\n * @property {number} nonCirculating Non-circulating supply in lamports\n * @property {Array<PublicKey>} nonCirculatingAccounts List of non-circulating account addresses\n */\ntype Supply = {\n  total: number,\n  circulating: number,\n  nonCirculating: number,\n  nonCirculatingAccounts: Array<PublicKey>,\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n *\n * @typedef {Object} TokenAmount\n * @property {string} amount Raw amount of tokens as string ignoring decimals\n * @property {number} decimals Number of decimals configured for token's mint\n * @property {number} uiAmount Token account as float, accounts for decimals\n */\ntype TokenAmount = {\n  amount: string,\n  decimals: number,\n  uiAmount: number,\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: number(),\n  decimals: number(),\n});\n\n/**\n * Token address and balance.\n *\n * @typedef {Object} TokenAccountBalancePair\n * @property {PublicKey} address Address of the token account\n * @property {string} amount Raw amount of tokens as string ignoring decimals\n * @property {number} decimals Number of decimals configured for token's mint\n * @property {number} uiAmount Token account as float, accounts for decimals\n */\ntype TokenAccountBalancePair = {\n  address: PublicKey,\n  amount: string,\n  decimals: number,\n  uiAmount: number,\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: number(),\n      decimals: number(),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n *\n * @typedef {Object} AccountBalancePair\n * @property {PublicKey} address\n * @property {number} lamports\n */\ntype AccountBalancePair = {\n  address: PublicKey,\n  lamports: number,\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @private\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @private\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @private\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @private\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress\" message\n */\nconst GetConfirmedSignaturesForAddressRpcResult = jsonRpcResult(\n  array(string()),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @private\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @private\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(SignatureStatusResult),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(nullable(string())),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\n/**\n * @private\n */\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TransactionFromConfirmed = coerce(\n  instance(Transaction),\n  ConfirmedTransactionResult,\n  result => {\n    const {message, signatures} = result;\n    return Transaction.populate(new Message(message), signatures);\n  },\n);\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @private\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @private\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @private\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n */\nexport const GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: TransactionFromConfirmed,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\nconst GetConfirmedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: TransactionFromConfirmed,\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\nconst GetParsedConfirmedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n *\n * @typedef {Object} SlotInfo\n * @property {number} slot Currently processing slot\n * @property {number} parent Parent of the current slot\n * @property {number} root The root block of the current slot's fork\n */\nexport type SlotInfo = {\n  slot: number,\n  parent: number,\n  root: number,\n};\n\n/**\n * Parsed account data\n *\n * @typedef {Object} ParsedAccountData\n * @property {string} program Name of the program that owns this account\n * @property {any} parsed Parsed account data\n * @property {number} space Space used by account data\n */\ntype ParsedAccountData = {\n  program: string,\n  parsed: any,\n  space: number,\n};\n\n/**\n * Stake Activation data\n *\n * @typedef {Object} StakeActivationData\n * @property {string} state: <string - the stake account's activation state, one of: active, inactive, activating, deactivating\n * @property {number} active: stake active during the epoch\n * @property {number} inactive: stake inactive during the epoch\n */\ntype StakeActivationData = {\n  state: 'active' | 'inactive' | 'activating' | 'deactivating',\n  active: number,\n  inactive: number,\n};\n\n/**\n * Information describing an account\n *\n * @typedef {Object} AccountInfo\n * @property {number} lamports Number of lamports assigned to the account\n * @property {PublicKey} owner Identifier of the program that owns the account\n * @property {T} data Optional data assigned to the account\n * @property {boolean} executable `true` if this account's data contains a loaded program\n */\ntype AccountInfo<T> = {\n  executable: boolean,\n  owner: PublicKey,\n  lamports: number,\n  data: T,\n};\n\n/**\n * Account information identified by pubkey\n *\n * @typedef {Object} KeyedAccountInfo\n * @property {PublicKey} accountId\n * @property {AccountInfo<Buffer>} accountInfo\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey,\n  accountInfo: AccountInfo<Buffer>,\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * @private\n */\ntype SubscriptionId = 'subscribing' | number;\n\n/**\n * @private\n */\ntype AccountSubscriptionInfo = {\n  publicKey: string, // PublicKey of the account as a base 58 string\n  callback: AccountChangeCallback,\n  commitment: ?Commitment,\n  subscriptionId: ?SubscriptionId, // null when there's no current server subscription id\n};\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * @private\n */\ntype ProgramAccountSubscriptionInfo = {\n  programId: string, // PublicKey of the program as a base 58 string\n  callback: ProgramAccountChangeCallback,\n  commitment: ?Commitment,\n  subscriptionId: ?SubscriptionId, // null when there's no current server subscription id\n};\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * @private\n */\ntype SlotSubscriptionInfo = {\n  callback: SlotChangeCallback,\n  subscriptionId: ?SubscriptionId, // null when there's no current server subscription id\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * @private\n */\ntype SignatureSubscriptionInfo = {\n  signature: TransactionSignature, // TransactionSignature as a base 58 string\n  callback: SignatureResultCallback,\n  commitment: ?Commitment,\n  subscriptionId: ?SubscriptionId, // null when there's no current server subscription id\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @private\n */\ntype RootSubscriptionInfo = {\n  callback: RootChangeCallback,\n  subscriptionId: ?SubscriptionId, // null when there's no current server subscription id\n};\n\n/**\n * Signature result\n *\n * @typedef {Object} SignatureResult\n */\nexport type SignatureResult = {|\n  err: TransactionError | null,\n|};\n\n/**\n * Transaction error\n *\n * @typedef {Object} TransactionError\n */\nexport type TransactionError = {};\n\n/**\n * Signature status\n *\n * @typedef {Object} SignatureStatus\n * @property {number} slot when the transaction was processed\n * @property {number | null} confirmations the number of blocks that have been confirmed and voted on in the fork containing `slot` (TODO)\n * @property {TransactionError | null} err error, if any\n * @property {string | null} confirmationStatus the transaction's cluster confirmation status, if data available. Possible non-null responses: `processed`, `confirmed`, `finalized`\n */\nexport type SignatureStatus = {\n  slot: number,\n  confirmations: number | null,\n  err: TransactionError | null,\n  confirmationStatus: string | null,\n};\n\n/**\n * A confirmed signature with its status\n *\n * @typedef {Object} ConfirmedSignatureInfo\n * @property {string} signature the transaction signature\n * @property {number} slot when the transaction was processed\n * @property {TransactionError | null} err error, if any\n * @property {string | null} memo memo associated with the transaction, if any\n * @property {number | null | undefined} blockTime The unix timestamp of when the transaction was processed\n */\nexport type ConfirmedSignatureInfo = {\n  signature: string,\n  slot: number,\n  err: TransactionError | null,\n  memo: string | null,\n  blockTime?: number | null,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  _rpcEndpoint: string;\n  _rpcRequest: RpcRequest;\n  _rpcWebSocket: RpcWebSocketClient;\n  _rpcWebSocketConnected: boolean = false;\n  _rpcWebSocketHeartbeat: IntervalID | null = null;\n  _rpcWebSocketIdleTimeout: TimeoutID | null = null;\n\n  _commitment: ?Commitment;\n  _blockhashInfo: {\n    recentBlockhash: Blockhash | null,\n    lastFetch: Date,\n    simulatedSignatures: Array<string>,\n    transactionSignatures: Array<string>,\n  };\n  _disableBlockhashCaching: boolean = false;\n  _pollingBlockhash: boolean = false;\n  _accountChangeSubscriptions: {[number]: AccountSubscriptionInfo} = {};\n  _accountChangeSubscriptionCounter: number = 0;\n  _programAccountChangeSubscriptions: {\n    [number]: ProgramAccountSubscriptionInfo,\n  } = {};\n  _programAccountChangeSubscriptionCounter: number = 0;\n  _slotSubscriptions: {\n    [number]: SlotSubscriptionInfo,\n  } = {};\n  _slotSubscriptionCounter: number = 0;\n  _signatureSubscriptions: {\n    [number]: SignatureSubscriptionInfo,\n  } = {};\n  _signatureSubscriptionCounter: number = 0;\n  _rootSubscriptions: {\n    [number]: RootSubscriptionInfo,\n  } = {};\n  _rootSubscriptionCounter: number = 0;\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitment optional default commitment level\n   */\n  constructor(endpoint: string, commitment: ?Commitment) {\n    this._rpcEndpoint = endpoint;\n\n    let url = urlParse(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    this._rpcRequest = createRpcRequest(url.href, useHttps);\n    this._commitment = commitment;\n    this._blockhashInfo = {\n      recentBlockhash: null,\n      lastFetch: new Date(0),\n      transactionSignatures: [],\n      simulatedSignatures: [],\n    };\n\n    url.protocol = useHttps ? 'wss:' : 'ws:';\n    url.host = '';\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    if (url.port !== null) {\n      url.port = String(Number(url.port) + 1);\n    }\n    this._rpcWebSocket = new RpcWebSocketClient(urlFormat(url), {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): ?Commitment {\n    return this._commitment;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if (res.error) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if (res.error) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if (res.error) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSupply', args);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if (res.error) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if (res.error) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if (res.error) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment: ?Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>,\n    >,\n  > {\n    let _args = [ownerAddress.toBase58()];\n    if (filter.mint) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if (res.error) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment: ?Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>,\n    >,\n  > {\n    let _args = [ownerAddress.toBase58()];\n    if (filter.mint) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if (res.error) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config: ?GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if (res.error) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if (res.error) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>,\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if (res.error) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment: ?Commitment,\n    epoch: ?number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if (res.error) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>> {\n    const args = this._buildArgs([programId.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if (res.error) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey,\n      account: AccountInfo<Buffer | ParsedAccountData>,\n    }>,\n  > {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if (res.error) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n  async confirmTransaction(\n    signature: TransactionSignature,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n\n    let subscriptionId;\n    let response: RpcResponseAndContext<SignatureResult> | null = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          signature,\n          (result, context) => {\n            subscriptionId = undefined;\n            response = {\n              context,\n              value: result,\n            };\n            resolve();\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    let timeoutMs = 60 * 1000;\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip': {\n        timeoutMs = 30 * 1000;\n        break;\n      }\n      // exhaust enums to ensure full coverage\n      case 'finalized':\n      case 'max':\n      case 'root':\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(\n        `Transaction was not confirmed in ${duration.toFixed(\n          2,\n        )} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`,\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if (res.error) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment: ?Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if (res.error) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment: ?Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if (res.error) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment: ?Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if (res.error) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config: ?SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config: ?SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if (res.error) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment: ?Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if (res.error) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   */\n  async getTotalSupply(commitment: ?Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTotalSupply', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if (res.error) {\n      throw new Error('failed to get total supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment: ?Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if (res.error) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment: ?Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if (res.error) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if (res.error) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if (res.error) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment: ?Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if (res.error) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   */\n  async getRecentBlockhashAndContext(\n    commitment: ?Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>,\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if (res.error) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit: ?number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if (res.error) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value.feeCalculator,\n    };\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   */\n  async getRecentBlockhash(\n    commitment: ?Commitment,\n  ): Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(Version));\n    if (res.error) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block\n   */\n  async getConfirmedBlock(slot: number): Promise<ConfirmedBlock> {\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', [slot]);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if (res.error) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n  ): Promise<ConfirmedTransaction | null> {\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', [\n      signature,\n    ]);\n    const res = create(unsafeRes, GetConfirmedTransactionRpcResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', [\n      signature,\n      'jsonParsed',\n    ]);\n    const res = create(unsafeRes, GetParsedConfirmedTransactionRpcResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress',\n      [address.toBase58(), startSlot, endSlot],\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddressRpcResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options: ?ConfirmedSignaturesForAddress2Options,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      [address.toBase58(), options],\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified account\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    amount: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      amount,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if (res.error) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  async _recentBlockhash(disableCache: boolean): Promise<Blockhash> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      // Attempt to use a recent blockhash for up to 30 seconds\n      const expired =\n        Date.now() - this._blockhashInfo.lastFetch >=\n        BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  async _pollNewBlockhash(): Promise<Blockhash> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      for (let i = 0; i < 50; i++) {\n        const {blockhash} = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: new Date(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return blockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transaction: Transaction,\n    signers?: Array<Account>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        // If the signature of this transaction has not been seen before with the\n        // current recentBlockhash, all done.\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          disableCache = true;\n        }\n      }\n    }\n\n    const signData = transaction.serializeMessage();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n    const args = [encodedTransaction, config];\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if (res.error) {\n      throw new Error('failed to simulate transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Account>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        // If the signature of this transaction has not been seen before with the\n        // current recentBlockhash, all done.\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * @private\n   */\n  async validatorExit(): Promise<boolean> {\n    const unsafeRes = await this._rpcRequest('validatorExit', []);\n    const res = create(unsafeRes, jsonRpcResult(boolean()));\n    if (res.error) {\n      throw new Error('validator exit failed: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options: ?SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options: ?SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const args = [encodedTransaction, config];\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if (res.error) {\n      if (res.error.data) {\n        const logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new Error('failed to send transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * @private\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @private\n   */\n  _wsOnError(err: Error) {\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @private\n   */\n  _wsOnClose(code: number) {\n    clearInterval(this._rpcWebSocketHeartbeat);\n    this._rpcWebSocketHeartbeat = null;\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._resetSubscriptions();\n  }\n\n  /**\n   * @private\n   */\n  async _subscribe<SubInfo: {subscriptionId: ?SubscriptionId}, RpcArgs>(\n    sub: SubInfo,\n    rpcMethod: string,\n    rpcArgs: RpcArgs,\n  ) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n        console.error(`${rpcMethod} error for argument`, rpcArgs, err.message);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _unsubscribe<SubInfo: {subscriptionId: ?SubscriptionId}>(\n    sub: SubInfo,\n    rpcMethod: string,\n  ) {\n    const subscriptionId = sub.subscriptionId;\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId: number = subscriptionId;\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        console.error(`${rpcMethod} error:`, err.message);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _resetSubscriptions() {\n    (Object.values(this._accountChangeSubscriptions): any).forEach(\n      s => (s.subscriptionId = null),\n    );\n    (Object.values(this._programAccountChangeSubscriptions): any).forEach(\n      s => (s.subscriptionId = null),\n    );\n    (Object.values(this._signatureSubscriptions): any).forEach(\n      s => (s.subscriptionId = null),\n    );\n    (Object.values(this._slotSubscriptions): any).forEach(\n      s => (s.subscriptionId = null),\n    );\n    (Object.values(this._rootSubscriptions): any).forEach(\n      s => (s.subscriptionId = null),\n    );\n  }\n\n  /**\n   * @private\n   */\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(\n      Number,\n    );\n    const programKeys = Object.keys(\n      this._programAccountChangeSubscriptions,\n    ).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    if (\n      accountKeys.length === 0 &&\n      programKeys.length === 0 &&\n      slotKeys.length === 0 &&\n      signatureKeys.length === 0 &&\n      rootKeys.length === 0\n    ) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          this._rpcWebSocket.close();\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'accountSubscribe',\n        this._buildArgs([sub.publicKey], sub.commitment, 'base64'),\n      );\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'programSubscribe',\n        this._buildArgs([sub.programId], sub.commitment, 'base64'),\n      );\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      this._subscribe(\n        sub,\n        'signatureSubscribe',\n        this._buildArgs([sub.signature], sub.commitment),\n      );\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _wsOnAccountNotification(notification: Object) {\n    const res = create(notification, AccountNotificationResult);\n    if (res.error) {\n      throw new Error('account notification failed: ' + res.error.message);\n    }\n    const keys = Object.keys(this._accountChangeSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._accountChangeSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment: ?Commitment,\n  ): number {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeAccountChangeListener(id: number): Promise<void> {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown account change id: ${id}`);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const res = create(notification, ProgramAccountNotificationResult);\n    if (res.error) {\n      throw new Error(\n        'program account notification failed: ' + res.error.message,\n      );\n    }\n    const keys = Object.keys(this._programAccountChangeSubscriptions).map(\n      Number,\n    );\n    for (let id of keys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        const {value, context} = res.result;\n        sub.callback(\n          {\n            accountId: value.pubkey,\n            accountInfo: value.account,\n          },\n          context,\n        );\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment: ?Commitment,\n  ): number {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(id: number): Promise<void> {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown program account change id: ${id}`);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const res = create(notification, SlotNotificationResult);\n    if (res.error) {\n      throw new Error('slot notification failed: ' + res.error.message);\n    }\n    const keys = Object.keys(this._slotSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._slotSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): number {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotChangeListener(id: number): Promise<void> {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot change id: ${id}`);\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override: ?Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @private\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const res = create(notification, SignatureNotificationResult);\n    if (res.error) {\n      throw new Error('signature notification failed: ' + res.error.message);\n    }\n    const keys = Object.keys(this._signatureSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._signatureSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        // Signatures subscriptions are auto-removed by the RPC service so\n        // no need to explicitly send an unsubscribe message\n        delete this._signatureSubscriptions[id];\n        this._updateSubscriptions();\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment: ?Commitment,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSignatureListener(id: number): Promise<void> {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown signature result id: ${id}`);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _wsOnRootNotification(notification: Object) {\n    const res = create(notification, RootNotificationResult);\n    if (res.error) {\n      throw new Error('root notification failed: ' + res.error.message);\n    }\n    const keys = Object.keys(this._rootSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._rootSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): number {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeRootChangeListener(id: number): Promise<void> {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown root change id: ${id}`);\n    }\n  }\n}\n","// @flow\n\nimport {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {Account} from '../account';\nimport type {ConfirmOptions} from '../connection';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Account>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Account>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// @flow\n\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from 'buffer-layout';\n\nimport * as Layout from './layout';\n\n/**\n * @typedef {Object} InstructionType\n * @property (index} The Instruction index (from solana upstream program)\n * @property (BufferLayout} The BufferLayout to use to build data\n */\nexport type InstructionType = {|\n  index: number,\n  layout: typeof BufferLayout,\n|};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n */\nexport function encodeData(type: InstructionType, fields: Object): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): Object {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\nimport {encodeData, decodeData} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\n\n/**\n * Create account system transaction params\n * @typedef {Object} CreateAccountParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} newAccountPubkey\n * @property {number} lamports\n * @property {number} space\n * @property {PublicKey} programId\n */\nexport type CreateAccountParams = {|\n  fromPubkey: PublicKey,\n  newAccountPubkey: PublicKey,\n  lamports: number,\n  space: number,\n  programId: PublicKey,\n|};\n\n/**\n * Transfer system transaction params\n * @typedef {Object} TransferParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} toPubkey\n * @property {number} lamports\n */\nexport type TransferParams = {|\n  fromPubkey: PublicKey,\n  toPubkey: PublicKey,\n  lamports: number,\n|};\n\n/**\n * Assign system transaction params\n * @typedef {Object} AssignParams\n * @property {PublicKey} accountPubkey\n * @property {PublicKey} programId\n */\nexport type AssignParams = {|\n  accountPubkey: PublicKey,\n  programId: PublicKey,\n|};\n\n/**\n * Create account with seed system transaction params\n * @typedef {Object} CreateAccountWithSeedParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} newAccountPubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {number} lamports\n * @property {number} space\n * @property {PublicKey} programId\n */\nexport type CreateAccountWithSeedParams = {|\n  fromPubkey: PublicKey,\n  newAccountPubkey: PublicKey,\n  basePubkey: PublicKey,\n  seed: string,\n  lamports: number,\n  space: number,\n  programId: PublicKey,\n|};\n\n/**\n * Create nonce account system transaction params\n * @typedef {Object} CreateNonceAccountParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {number} lamports\n */\nexport type CreateNonceAccountParams = {|\n  fromPubkey: PublicKey,\n  noncePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  lamports: number,\n|};\n\n/**\n * Create nonce account with seed system transaction params\n * @typedef {Object} CreateNonceAccountWithSeedParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {number} lamports\n */\nexport type CreateNonceAccountWithSeedParams = {|\n  fromPubkey: PublicKey,\n  noncePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  lamports: number,\n  basePubkey: PublicKey,\n  seed: string,\n|};\n\n/**\n * Initialize nonce account system instruction params\n * @typedef {Object} InitializeNonceParams\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n */\nexport type InitializeNonceParams = {|\n  noncePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n|};\n\n/**\n * Advance nonce account system instruction params\n * @typedef {Object} AdvanceNonceParams\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n */\nexport type AdvanceNonceParams = {|\n  noncePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n|};\n\n/**\n * Withdraw nonce account system transaction params\n * @typedef {Object} WithdrawNonceParams\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} toPubkey\n * @property {number} lamports\n */\nexport type WithdrawNonceParams = {|\n  noncePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  toPubkey: PublicKey,\n  lamports: number,\n|};\n\n/**\n * Authorize nonce account system transaction params\n * @typedef {Object} AuthorizeNonceParams\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} newAuthorizedPubkey\n */\nexport type AuthorizeNonceParams = {|\n  noncePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  newAuthorizedPubkey: PublicKey,\n|};\n\n/**\n * Allocate account system transaction params\n * @typedef {Object} AllocateParams\n * @property {PublicKey} accountPubkey\n * @property {number} space\n */\nexport type AllocateParams = {|\n  accountPubkey: PublicKey,\n  space: number,\n|};\n\n/**\n * Allocate account with seed system transaction params\n * @typedef {Object} AllocateWithSeedParams\n * @property {PublicKey} accountPubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {number} space\n * @property {PublicKey} programId\n */\nexport type AllocateWithSeedParams = {|\n  accountPubkey: PublicKey,\n  basePubkey: PublicKey,\n  seed: string,\n  space: number,\n  programId: PublicKey,\n|};\n\n/**\n * Assign account with seed system transaction params\n * @typedef {Object} AssignWithSeedParams\n * @property {PublicKey} accountPubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {PublicKey} programId\n */\nexport type AssignWithSeedParams = {|\n  accountPubkey: PublicKey,\n  basePubkey: PublicKey,\n  seed: string,\n  programId: PublicKey,\n|};\n\n/**\n * Transfer with seed system transaction params\n * @typedef {Object} TransferWithSeedParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} basePubkey\n * @property {PublicKey} toPubkey\n * @property {number} lamports\n * @property {string} seed\n * @property {PublicKey} programId\n */\nexport type TransferWithSeedParams = {|\n  fromPubkey: PublicKey,\n  basePubkey: PublicKey,\n  toPubkey: PublicKey,\n  lamports: number,\n  seed: string,\n  programId: PublicKey,\n|};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type;\n    for (const t of Object.keys(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (SYSTEM_INSTRUCTION_LAYOUTS[t].index == typeIndex) {\n        type = t;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction: TransactionInstruction): TransferParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): TransferWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @private\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @private\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n * @typedef {'Create' | 'Assign' | 'Transfer' | 'CreateWithSeed'\n | 'AdvanceNonceAccount' | 'WithdrawNonceAccount' | 'InitializeNonceAccount'\n | 'AuthorizeNonceAccount'} SystemInstructionType\n */\nexport type SystemInstructionType = $Keys<typeof SYSTEM_INSTRUCTION_LAYOUTS>;\n\n/**\n * An enumeration of valid system InstructionType's\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * Public key that identifies the System program\n   */\n  static get programId(): PublicKey {\n    return new PublicKey('11111111111111111111111111111111');\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: params.programId.toBuffer(),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if (params.basePubkey) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: params.programId.toBuffer(),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: params.lamports});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if (params.basePubkey) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: params.basePubkey.toBuffer(),\n        seed: params.seed,\n        programId: params.programId.toBuffer(),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {programId: params.programId.toBuffer()});\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: params.basePubkey.toBuffer(),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: params.programId.toBuffer(),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if (params.basePubkey && params.seed) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: params.authorizedPubkey.toBuffer(),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: params.newAuthorizedPubkey.toBuffer(),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if (params.basePubkey) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: params.basePubkey.toBuffer(),\n        seed: params.seed,\n        space: params.space,\n        programId: params.programId.toBuffer(),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","// @flow\n\nimport {Account} from './account';\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Account,\n    program: Account,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\nimport {encodeData, decodeData} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\n\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\nexport class Authorized {\n  staker: PublicKey;\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\nexport class Lockup {\n  unixTimestamp: number;\n  epoch: number;\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n}\n\n/**\n * Create stake account transaction params\n * @typedef {Object} CreateStakeAccountParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} stakePubkey\n * @property {Authorized} authorized\n * @property {Lockup} lockup\n * @property {number} lamports\n */\nexport type CreateStakeAccountParams = {|\n  fromPubkey: PublicKey,\n  stakePubkey: PublicKey,\n  authorized: Authorized,\n  lockup: Lockup,\n  lamports: number,\n|};\n\n/**\n * Create stake account with seed transaction params\n * @typedef {Object} CreateStakeAccountWithSeedParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {Authorized} authorized\n * @property {Lockup} lockup\n * @property {number} lamports\n */\nexport type CreateStakeAccountWithSeedParams = {|\n  fromPubkey: PublicKey,\n  stakePubkey: PublicKey,\n  basePubkey: PublicKey,\n  seed: string,\n  authorized: Authorized,\n  lockup: Lockup,\n  lamports: number,\n|};\n\n/**\n * Initialize stake instruction params\n * @typedef {Object} InitializeStakeParams\n * @property {PublicKey} stakePubkey\n * @property {Authorized} authorized\n * @property {Lockup} lockup\n */\nexport type InitializeStakeParams = {|\n  stakePubkey: PublicKey,\n  authorized: Authorized,\n  lockup: Lockup,\n|};\n\n/**\n * Delegate stake instruction params\n * @typedef {Object} DelegateStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} votePubkey\n */\nexport type DelegateStakeParams = {|\n  stakePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  votePubkey: PublicKey,\n|};\n\n/**\n * Authorize stake instruction params\n * @typedef {Object} AuthorizeStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} newAuthorizedPubkey\n * @property {StakeAuthorizationType} stakeAuthorizationType\n * @property {PublicKey} custodianPubkey\n */\nexport type AuthorizeStakeParams = {|\n  stakePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  newAuthorizedPubkey: PublicKey,\n  stakeAuthorizationType: StakeAuthorizationType,\n  custodianPubkey?: PublicKey,\n|};\n\n/**\n * Authorize stake instruction params using a derived key\n * @typedef {Object} AuthorizeWithSeedStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorityBase\n * @property {string} authoritySeed\n * @property {PublicKey} authorityOwner\n * @property {PublicKey} newAuthorizedPubkey\n * @property {StakeAuthorizationType} stakeAuthorizationType\n * @property {PublicKey} custodianPubkey\n */\nexport type AuthorizeWithSeedStakeParams = {|\n  stakePubkey: PublicKey,\n  authorityBase: PublicKey,\n  authoritySeed: string,\n  authorityOwner: PublicKey,\n  newAuthorizedPubkey: PublicKey,\n  stakeAuthorizationType: StakeAuthorizationType,\n  custodianPubkey?: PublicKey,\n|};\n\n/**\n * Split stake instruction params\n * @typedef {Object} SplitStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} splitStakePubkey\n * @property {number} lamports\n */\nexport type SplitStakeParams = {|\n  stakePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  splitStakePubkey: PublicKey,\n  lamports: number,\n|};\n\n/**\n * Withdraw stake instruction params\n * @typedef {Object} WithdrawStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} toPubkey\n * @property {number} lamports\n * @property {PublicKey} custodianPubkey\n */\nexport type WithdrawStakeParams = {|\n  stakePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  toPubkey: PublicKey,\n  lamports: number,\n  custodianPubkey?: PublicKey,\n|};\n\n/**\n * Deactivate stake instruction params\n * @typedef {Object} DeactivateStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n */\nexport type DeactivateStakeParams = {|\n  stakePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n|};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type;\n    for (const t of Object.keys(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (STAKE_INSTRUCTION_LAYOUTS[t].index == typeIndex) {\n        type = t;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @private\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @private\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n * @typedef { 'Initialize' | 'Authorize' | 'AuthorizeWithSeed' | 'Delegate' | 'Split' | 'Withdraw'\n | 'Deactivate' } StakeInstructionType\n */\nexport type StakeInstructionType = $Keys<typeof STAKE_INSTRUCTION_LAYOUTS>;\n\n/**\n * An enumeration of valid stake InstructionType's\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n      Layout.rustString('authoritySeed'),\n      Layout.publicKey('authorityOwner'),\n    ]),\n  },\n});\n\n/**\n * @typedef {Object} StakeAuthorizationType\n * @property (index} The Stake Authorization index (from solana-stake-program)\n */\nexport type StakeAuthorizationType = {|\n  index: number,\n|};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * Public key that identifies the Stake program\n   */\n  static get programId(): PublicKey {\n    return new PublicKey('Stake11111111111111111111111111111111111111');\n  }\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `std::mem::size_of::<StakeState>()`:\n   * https://docs.rs/solana-stake-program/1.4.4/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static get space(): number {\n    return 200;\n  }\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: authorized.staker.toBuffer(),\n        withdrawer: authorized.withdrawer.toBuffer(),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: lockup.custodian.toBuffer(),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: newAuthorizedPubkey.toBuffer(),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: newAuthorizedPubkey.toBuffer(),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: authorityOwner.toBuffer(),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: authorizedPubkey,\n        newAccountPubkey: splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n\n    return transaction.add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey,\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","// @flow\n\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from 'buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport assert from 'assert';\nimport {keccak_256} from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst PUBLIC_KEY_BYTES = 65;\nconst HASHED_PUBKEY_SERIALIZED_SIZE = 20;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Create a Secp256k1 instruction using a public key params\n * @typedef {Object} CreateSecp256k1InstructionWithPublicKeyParams\n * @property {Buffer | Uint8Array | Array<number>} publicKey\n * @property {Buffer | Uint8Array | Array<number>} message\n * @property {Buffer | Uint8Array | Array<number>} signature\n * @property {number} recoveryId\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {|\n  publicKey: Buffer | Uint8Array | Array<number>,\n  message: Buffer | Uint8Array | Array<number>,\n  signature: Buffer | Uint8Array | Array<number>,\n  recoveryId: number,\n|};\n\n/**\n * Create a Secp256k1 instruction using a private key params\n * @typedef {Object} CreateSecp256k1InstructionWithPrivateKeyParams\n * @property {Buffer | Uint8Array | Array<number>} privateKey\n * @property {Buffer | Uint8Array | Array<number>} message\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {|\n  privateKey: Buffer | Uint8Array | Array<number>,\n  message: Buffer | Uint8Array | Array<number>,\n|};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethPublicKey'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * Public key that identifies the Secp256k program\n   */\n  static get programId(): PublicKey {\n    return new PublicKey('KeccakSecp256k11111111111111111111111111111');\n  }\n\n  /**\n   * Create a secp256k1 instruction with public key\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes`,\n    );\n\n    let ethPublicKey;\n    try {\n      ethPublicKey = constructEthPubkey(publicKey);\n    } catch (error) {\n      throw new Error(`Error constructing ethereum public key: ${error}`);\n    }\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethPublicKey.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures: numSignatures,\n        signatureOffset: signatureOffset,\n        signatureInstructionIndex: 0,\n        ethAddressOffset: ethAddressOffset,\n        ethAddressInstructionIndex: 0,\n        messageDataOffset: messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: 0,\n        signature: toBuffer(signature),\n        ethPublicKey: ethPublicKey,\n        recoveryId: recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create a secp256k1 instruction with private key\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes`,\n    );\n\n    try {\n      const publicKey = publicKeyCreate(privateKey, false);\n      const messageHash = Buffer.from(\n        keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n\nfunction constructEthPubkey(\n  publicKey: Buffer | Uint8Array | Array<number>,\n): Buffer {\n  return Buffer.from(\n    keccak_256\n      .update(toBuffer(publicKey.slice(1))) // throw away leading byte\n      .digest(),\n  ).slice(-HASHED_PUBKEY_SERIALIZED_SIZE);\n}\n","// @flow\n\nimport {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @private\n */\ntype ConfigKey = {|\n  publicKey: PublicKey,\n  isSigner: boolean,\n|};\n\n/**\n * Info used to identity validators.\n *\n * @typedef {Object} Info\n * @property {string} name validator name\n * @property {?string} website optional, validator website\n * @property {?string} details optional, extra information the validator chose to share\n * @property {?string} keybaseUsername optional, used to identify validators on keybase.io\n */\nexport type Info = {|\n  name: string,\n  website?: string,\n  details?: string,\n  keybaseUsername?: string,\n|};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","// @flow\nimport * as BufferLayout from 'buffer-layout';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {|\n  slot: number,\n  confirmationCount: number,\n|};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = {|\n  epoch: number,\n  credits: number,\n  prevCredits: number,\n|};\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @private\n */\nconst VoteAccountLayout = BufferLayout.struct([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedVoterPubkey'),\n  Layout.publicKey('authorizedWithdrawerPubkey'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64('epoch'),\n  BufferLayout.nu64('credits'),\n  BufferLayout.nu64('lastEpochCredits'),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n]);\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedVoterPubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  commission: number;\n  votes: Array<Lockout>;\n  rootSlot: number | null;\n  epoch: number;\n  credits: number;\n  lastEpochCredits: number;\n  epochCredits: Array<EpochCredits>;\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const va = VoteAccountLayout.decode(toBuffer(buffer), 0);\n    va.nodePubkey = new PublicKey(va.nodePubkey);\n    va.authorizedVoterPubkey = new PublicKey(va.authorizedVoterPubkey);\n    va.authorizedWithdrawerPubkey = new PublicKey(\n      va.authorizedWithdrawerPubkey,\n    );\n    if (!va.rootSlotValid) {\n      va.rootSlot = null;\n    }\n    return va;\n  }\n}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either, R.xor\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\n\nvar or =\n/*#__PURE__*/\n_curry2(function or(a, b) {\n  return a || b;\n});\n\nexport default or;","import _curry1 from \"./_curry1.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","import _arrayFromIterator from \"./_arrayFromIterator.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _functionName from \"./_functionName.js\";\nimport _has from \"./_has.js\";\nimport _objectIs from \"./_objectIs.js\";\nimport keys from \"../keys.js\";\nimport type from \"../type.js\";\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\nimport path from \"./path.js\";\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\n\nvar pathEq =\n/*#__PURE__*/\n_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n\nexport default pathEq;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAny =\n/*#__PURE__*/\nfunction () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany =\n/*#__PURE__*/\n_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\n\nexport default _xany;","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xany from \"./internal/_xany.js\";\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\n\nvar any =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}));\n\nexport default any;"],"sourceRoot":""}